스프링 프레임워크
교재를 꺼내오자!

🍒스프링의 등장 배경 
EJB는 어렵다. ejb가 뭔데 우리 사이를 갈라놔

🍒IBM 개발자들이 만들었다.
순수하게 자바코드로 만들었음 POJO 개발방식 plain old java object
자바 클래스를 이용할 수 있음.
가볍다. 오픈 소스임

🍕cf)프레임워크에는 무슨 프레임 워크들이 있을까요
🍔게살버거다

🍔POJO 방식.으로 개발하면서 중점을 둔 부분
(1)SoftWare 재사용 방안들.
    1) copy and paste 기초적.
	필요한 코드를 다시 짜지 않고 복붙해오기.
    2) Method를 만들어서 호출하기.
    3) 클래스 재사용(상속)
	DBConn처럼.
    4) AOP(Aspect Oriented Programming)
	기능에 따라 객체를 만들어 놓고 필요할 때마다 불러서 사용.
	ex)은행
	입출금할 때마다 보안을 상속받아서 사용.
	계좌이체도, 대출도 마찬가지.
	이게 3번 상속관계
	메모리에 입출금과 보안이 함께 만들어짐. 계좌이체+보안, 대출+보안.
	이렇게 하면 보안끼리 충돌할 수 있다고 함.
	
	4번 AOP
	서비스가 실행할 때(상속 관계X) 
	인증이 필요하다면 보안서비스를 독립적으로 실행 >> 필요할 때마다 호출하는관계.
	핵심 관심 모듈(입출금, 계좌이체, 대출) - 횡단 모듈(보안)
	클래스로 분리하여 상속하는 게 아니라 서비스를 분리. 종속성이 없음. 독립적인 기능.서비스임.
	weaving 작업이라고 부른다.

	AOP → OOP기능을 확장시켜 객체지향다운 프로그래밍이 가능하도록 함.

(2)디자인패턴 Design Pattern
    🍟디자인패턴이란?
	프로그램에서 자주 사용하는 기능이나 모듈 등을 🍟재사용하기 편하게🍟 묶을 수 있는 방법을 제시하는 개념.
	디자인을 잘 해서 소프트웨어를 효과적으로 잘 쓰자.
	(전혀 이해하지 못했다)

    🌭GOF의 디자인 패턴
	Gang of Four
	과학자들 네 명이 모여서 만든 책.

(3)FrameWork의 등장.
디자인패턴 여기에 화장실을 두고 여기에 부엌,여기에 안방, 여기에 양이 방 놓아두면 좋아요 배치(MVC 디자인패턴)
프레임워크 MVC를 잘 쓸 수 있도록 칸막이를 잘 설치해 둔 것. 칸막이가 잘 만들어져 있는 틀.(우리는 MVC를 쓸 것)

정리: 틀을 만드는데 POJO방식으로 개발.&사용. 한번 만들어진 클래스를 재사용. 그 클래스들을 저장하는 공간이 딱딱 나누어져있고
그 공간은 디자인패턴 기반으로 배치해 둔 것임.

🍿요구사항을 만족하는 구조와 안정적인 기능을 실행하도록 제어해주는 라이브러리 집합.
라이브러리들이 툴이랑 합체가 되어야 한다.

🧂왜 쓰는가
화장실을 만들기 위해 생겨나는 여러 고민들,,,
framework:이미 셋팅되어있다구~ 칸막이 안에 만들자구~
1 비기능적인 요소들(함수 등)을 개발 초기 단계에서 구현해야할 때의 불편함이 감소.
2 그래서 기능적인 개발에만 집중할 수 있음.
3 디자인 패턴을 내부적으로 적용하여 반복적인 객체 생성이나 문제들을 해결할 수 있음.

🥓개발자는 프레임워크에서 제공하는 기반 코드를 확장하여 사용하면서, 프레임워크 안에 적용된 디자인 패턴을 익힐 수 있다.
(✿◠‿◠)

(4)그 중에서도 🌹🌺스프링프레임워크🌻🌸
jar파일 같은 라이브러리임
POJO방식으로 개발을 지원하는 프레임워크🌴🍀🍃
 1) 구성 요소🥚
	https://yoo-hyeok.tistory.com/129
	자주봅시다람쥐 참고 하나도 모르갯내ㅎ...ㅠ
	
	🍳IoC(Inversion of Control)	inversion 역행, 역전
	개발자가 만들었던 걸 컨테이너(Spring Core)가 만든다.
	인스턴스의 생성부터 소멸까지를 개발자가 아닌 콘테이너가 대신 해준다는 읨이. 
	컨테이너가 개발자가 하던 인스턴스의 제어 권한을 위임받아 진행을 함.
	삭제생성 못하고 걍 가져와서 쓰기만 해야 하는 개발자깅이.

	🧇DI(dependency injection) 의존성 주입
	ioc 컨테이너에서 만든 객체를 가져다가 쓰는 것을 di라고 한다.
	클래스간의 의존 관계를 빈 설정 정보를 컨테이너가 자동으로 연결해주는 것(??????????????????????)
	이게 무슨 비문이야 엄마도?


(5)스프링 프레임워크를 사용하는 개발 환경 구축.(버전이 중요)
 1) 이클립스 환경에 스프링 라이브러리 추가

 2) spring.io에서 STS(Spring Tool Suite) 다운 받기 <<🏵
	이클립스 + 스프링 라이브러리임 허으 춥다
다운로드를 받으러 갑시다 https://spring.io > Spring Tools 4 for Eclipse 허으으 추워 는 너무 최신이라 3버전으로 할 것임.
>3.9.18버전 > 4.21 >>sts-bundle로 풀기 > RELEASE >sts.exe
에러가 뜨면 대부분 jdk 버전이 너무 높아서 그런 거임(그 뭐더라 환경 변수 가서 버전을 확인해 봐야 함.)
>워크스페이스 따로 만들기 spring_workspace(꼭 영어 폴더에 만들어라)
>perspective가 spring인 상태.
>내장 서버(VM) 안 씀. 삭제하셍용 preferences의 server runtime environments에서도 삭제
>새 서버 가져오기. > 그리고 servers에서도 가져오기
>server xml 포트 바꾸기 > web xml에서 한글 깨질 수 있는 부분 처리 인코딩
>새 프로젝트 만들기 > open perspective 하기 

web app가 web contents가 된다.
src/main/java에 클래스 넣어주기

JRE가 안 보여서 에러가 뜬다. build path
jre system. 과거에 17버전이 있었는데 그게 실제로는 존재하지 않아서 그런거임
add > workspace default jre누르면 됨.

나머지 빨간색들은 그냥 냅두면됩니다
톰캣 서버와 jre가 잘 있는지 확인해두기.

dynamic web project 잘 돌아가는지 확인하기

🥞콘솔 메모리 늘리겟냐 >늘리면 메모리가 늘어납니다.

🧈콘솔창이 빨갛다 > 톰캣의 java ee라이브러리만 사용하는군아.
model2로 개발할 때 스프링 Web MVC를 쓰닉까
스프링 라이브러리가 필요하다!!!!!!!!!!!!!!!!!!!!!!
🍞우호🥐우호
스프링 라이브러리를 쓸 때는 검은색임. 
안 나오면 톰캣과 프로젝트의 연결을 확인해야 한다.


🥨톰캣 끄기.
이제 새로운 스프링 프로젝트를 만들 거임
레거시 프로젝트로!
template : spring mvc project
>패키지 생성
com.myspring.test
test는 model2에서 url에서 포트 번호 다음에 나오는 context 역할을 한다.
context name이 되는 것임.
꼭 3단계로 만듭시다.
만들어지는 동안 기다리기

🥯폴더를 보자 
M maven구조
S spring 라이브러리를 가지고 있다.
build path>라이브러리 보기.
se 1.6이 내장되어 있는데 바꿔야 한다.(근데 꼭 안 바꿔도 되긴 함)
maven 삭제하면 안됨.(근데 maven이 뭔데)
tomcat 추가

🥖실험 파일
따로 안 만들고 샘플이 있다
src > main > wep app > web inf >views
(jsp 자리가 여기라는 것임)
view자리에 있는 jsp.
depth가 변형이 안 된다. 평생 여기에 살라고 jsp君

jsp 파일을 실행하면 안됨.
해킹때문에 실제 주소랑 좀 달라야 함
localhost:9000/test/로 해야한다.

🧀오늘의 실패 포인트
컴퓨터 이름도 가능하면 영어로! <<흠 이건 집에가서 한번 노트북으로 실험 해보기
그냥 사용자를 추가하거나 이름을 변경하는 게 좋겠다. 실험 굳이 하지 말고 걍 바꿔
그리고 directory 주소도 영어로
압축 파일 푸는 프로그램은 알집이나 그런거

🥗.do
스프링 프레임워크 구조를 썼구나!
정부의 프로젝트는 스프링 + 전자정부

🥙스프링 구조 꼭 알아 놓아라............... 알아 놓는 수준이 아니라 외우기!
근데 졸았음ㅋㅋㄹㅃㅃ
스프링 mvc 패턴으로 검색하기.

클라이언트가 /로 요청을 줬을 때(value)

handler mapping
servlet-context.xml 의 컴포넌트 스캔 역할
서블릿이 물어본다 value = "/"를 누가 갖고 있나요?? 어떤 컨트롤러가? 엄마도?

handler mapping: 네 있네용
(없어용 그런 거 하면 에러가 뜨는 것임
서블릿: 없대 404야!)
🍗hm이 어디서 읽는지 알려주는 게(hm의 명세서)~ src의 appServlet안에 있는 servlet_context.xml에 있음
마지막에서 두번째 줄 com.web.spring을 읽기만 하는 것임.
(그래서 더 읽을 걸 추가하고 싶으면 com.web.spring 밑에
복붙해서 com.web.controller을 추가하면 됨.)
명세서 주소가 겹치면 에러가 뜰 수 있다는 점 주의!(지금으로선 뭔 말인지 1도 모르겟음)


>> handler adapter로 간다.
어댑터가 홈 컨트롤러를 찾음.

>>컨트롤러는 우리가 만든다. 
(src/main/java의 com.web.myspring에 홈 컨트롤러가 있음)

요청 정보가 있으면 실행한다. 
그리고 view의 이름을 반환. 그 이름은 바로~ "home"
jsp 이름은 home이다.

그 이름을 어댑터가 받고 그걸 또 디스패쳐 서블릿에게 보냄

서블릿: "home"을 받음.
(서블릿은 일만 시킨다)
>>서블릿: 뷰 리졸버쿤 홈을 줄게
뷰 리졸버: 홈이란 이름이 있는지 찾아볼게용 servlet-context.xml 파일에서 말이에요
19번째 줄에 있음.
web-inf/views에 있구나.
근데 서블릿이 보낸 것에는 확장자가 없기 때문에
suffix로 jsp를 붙임(servlet-context.xml얘기임)
확장자를 붙이는 작업.

>>서블릿은 home.jsp를 갖게 된 것임

>>실제views로 이게 가서 클라이언트로 전송.
허미~

🥪실습
클라이언트의 요청: /hello
野望
컨트롤러에 /hello가 있어야 한다.
view name은 "hello"
view에는 실제 파일: hello.jsp가 있어야.

우리가 해야 할 일.🌮
컨트롤러를 만들고, jsp파일을 만들어야 함

컨트롤러를 만들자! src/main/java
class

@controller annotation을 붙이면 컨트롤러 완장을 차는 것임.
(extends controller는 2.대 버전)
@RequestMapping도 해야 함.
value를 정하고,
method도 get할지 post할지 정해야 함.

🌯스프링의 MVC 프로젝트 생성 실습.
프로젝트명: myspring2 
context path:spring
실행을 위한 주소:http://localhost:9000/spring/test
실습 컨트롤러 TestController
view명 test.jsp
실행 결과 welcome to spring world

🥫jdk, tomcat, spring 셋팅은 혼자서 다 할 수 있어야 해~!

🍖스프링에서는 POJO방식을 써서 원래 Sun이 말한 Model2의 Controller역할인
서블릿 대신에 걍 자바 파일이 담당한.

🥩src/main/java에 새 패키지를 추가했고 그걸로 인해 생기는 문제를 보면
주소를 controller/test로 해야 내용물이 뜨는게 아냐?
라고 생각할 수 있으나... context root는 spring임을 잊지 맙시다~!
원인은 servlet-context.xml의 component scan이라구~!

🍠스프링 싹 지우기.
sts bundle 삭제.

🥟라이브러리 감독관:여러개 있다는데 maven을 씁니다.
maven이 뭘 하는 폴더를 삭제(기억력 장난아니다)
사용자>이름>.m2다!
.m2를 삭제.